#!/usr/bin/perl -w
use strict;
our $copyright = <<END;
    Copyright 2021-2022 Ian Jackson and contributors
    SPDX-License-Identifier: MIT
    There is NO WARRANTY.
END

use autodie;

my $CTX = '-';
my $BASE = undef;
my $TABHEAD = undef;

sub hack_label ($) {
  my ($lab) = @_;

  ##   * The \chapter label should be named after the input file only, and
  ##     not the chapter title, because references in other files only know
  ##     the former.
  ##
  ##   * The \section etc. labels should be /qualified/ with the input file
  ##     name, because they're only guaranteed unique within the file.
  if ($CTX eq "chapter") { return $BASE; }
  else { return "$BASE.$lab"; }
}

sub hack_ref ($$) {
  my ($fn, $frag) = @_;
  my $ref;

  if (defined $frag) { $ref = "$fn.$frag"; }
  else { $ref = $fn; }

  ## Some specific hacks because Pandoc and mdbook have different fragment
  ## derivation algorithms.
  if ($ref eq "errors.result--") { $ref = "errors.result"; }

  return $ref;
}

while (<>) {

  ## Capture the input basename.
  ($BASE = $ARGV) =~ s!^(?:.*/)?([^./]+)(?:\.[^/]*)?!$1!;

  ## Notice changes in context.
  if (/^\\(chapter|(?:|sub|subsub)section|(?:|sub)paragraph)[[{]/)
    { $CTX = $1; }

  ## Hack labels.
  s/\\label\{([^}]*)\}/"\\label{" . hack_label($1) . "}"/ge;

  ## Hack references.
  s/\\href\{([^\.}]*)\.md(?:\\\#([^}]*))?\}/"\\hyperref[" . hack_ref($1, $2) . "]"/ge;

  ## Hack tables.
  ##
  ## This is where things get ugly.
  if (/\\begin\{longtable\}/) { $TABHEAD = ""; }
  if (defined $TABHEAD) {
    $TABHEAD .= $_;
    if (/\\endhead/) {
      $_ = $TABHEAD; $TABHEAD = undef;
      /^ (\\begin\{longtable\} .* \\toprule \s*)
	 (.*)
	 (\s* \\tabularnewline .* \\endhead .*) $/sx
	   or die "failed to parse table header";
      my ($pre, $hd, $post) = ($1, $2, $3);
      my @hd = split /\s*(?<!\\)\&\s*/, $hd;
      my $sig = join "|",
	map { my $t = $_; $t =~ s/^\s+//; $t =~ s/\s.*$//s; lc $t }
	@hd;
      if ($sig eq "type|storage:|lifetime|interior|threads") {
	my @wd = (10, 16, 15, 34, 17);
	for (my $i = 0; $i < 5; $i++) {
	  my $l = $i ? "" : '@{}';
	  my $r = $i == 4 ? '@{}' : "";
	  $hd[$i] = "\\multicolumn{1}{${l}b{$wd[$i]mm}$r}{\\raggedright $hd[$i]}";
	}
      }
      $_ = $pre . join(" & ", @hd) . $post;
    } else {
      $_ = "";
    }
  }

  ## Hack `fancy-pre' tokens.
  s/BGNUu8OOK7UPtX3H/{/g;
  s/smPE0doaBMjrKFYg/}/g;
  s/OlY2yMns1zQ84wyF/\\/g;
  s/IX9Zl6Lbd6F9RgYs/[/g;
  s/1hTgD8bayWOmHqSY/]/g;

  ## Include conversions-table
  if ($_ eq "\\{\\{\\#include conversions-table.html\\}\\}\n") {
    $_ = "\\input{conversions-table.tex}\n";
  }

  ## Non-unicode.
  s/▵/\$\\smalltriangleup\$/g;
  s/◂/\$\\blacktriangleleft\$/g;
  s/▿/\$\\smalltriangledown\$/g;
  s/≠/\$\\ne\$/g;
  s/≈/\$\\approx\$/g;
  s/⩯/\$\\hatapprox\$/g;

  # Subtle touches.
  s/2\\\^\{\}n/\$2^n\$/;

  print;
}
